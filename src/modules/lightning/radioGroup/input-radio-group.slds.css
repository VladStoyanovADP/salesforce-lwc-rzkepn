
/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved
  Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */

:host([data-render-mode="shadow"]) .slds-radio {
  display: inline-block;
}

:host([data-render-mode="shadow"]) .slds-radio .slds-radio_faux {
  width: var(--slds-g-sizing-5);
  height: var(--slds-g-sizing-5);
  display: inline-block;
  position: relative;
  flex-shrink: 0;
  vertical-align: middle;
  /* stylelint-disable */
  border: 1px solid var(--slds-c-radio-color-border, var(--slds-g-color-border-1));
  /* stylelint-enable */
  border-radius: var(--slds-g-radius-border-circle);
  background: none;
  /* stylelint-disable */
  background-color: var(--slds-c-radio-color-background, var(--slds-g-color-surface-container-1));
  box-shadow: var(--slds-c-radio-shadow);
  /* stylelint-enable */
  transition: border 0.1s linear, background-color 0.1s linear;
}

:host([data-render-mode="shadow"]) .slds-radio .slds-form-element__label {
  display: inline;
  vertical-align: middle;
  font-size: var(--slds-g-font-scale-neg-3);
}

:host([data-render-mode="shadow"]) .slds-radio [type='radio'],:host([data-render-mode="shadow"]) 
.slds-radio_button [type='radio'] {
  width: var(--slds-g-sizing-1);
  height: var(--slds-g-sizing-1);
  border: 0;
  clip: rect(0 0 0 0);
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
}

:host([data-render-mode="shadow"]) .slds-radio [type='radio']:checked + .slds-radio_faux,:host([data-render-mode="shadow"]) 
.slds-radio [type='radio']:checked ~ .slds-radio_faux,:host([data-render-mode="shadow"]) 
.slds-radio [type='radio']:checked + .slds-radio__label .slds-radio_faux {
  /* stylelint-disable */
  border-color: var(--slds-c-radio-color-border-checked, var(--slds-g-color-border-1));
  background: none;
  background-color: var(--slds-c-radio-color-background-checked, var(--slds-g-color-surface-container-1));
  /* stylelint-enable */
}

:host([data-render-mode="shadow"]) .slds-radio [type='radio']:checked + .slds-radio_faux::after,:host([data-render-mode="shadow"]) 
.slds-radio [type='radio']:checked ~ .slds-radio_faux::after,:host([data-render-mode="shadow"]) 
.slds-radio [type='radio']:checked + .slds-radio__label .slds-radio_faux::after {
  width: var(--slds-g-sizing-3);
  height: var(--slds-g-sizing-3);
  content: '';
  position: absolute;
  top: 50%;

  /*! @noflip */
  left: 50%;
  transform: translate3d(-50%, -50%, 0);
  border-radius: 50%;
  background: none;
  /* stylelint-disable */
  background-color: var(--slds-c-radio-mark-color-foreground, var(--slds-g-color-accent-container-2));
}

:host([data-render-mode="shadow"]) .slds-radio [type='radio']:focus + .slds-radio_faux,:host([data-render-mode="shadow"]) 
.slds-radio [type='radio']:focus ~ .slds-radio_faux,:host([data-render-mode="shadow"]) 
.slds-radio [type='radio']:focus + .slds-radio__label .slds-radio_faux {
  border-color: var(--slds-c-radio-color-border-focus, var(--slds-g-color-accent-1));
  box-shadow: var(--slds-c-radio-shadow-focus, 0 0 3px var(--slds-g-color-accent-2));
  /* stylelint-enable */
}

:host([data-render-mode="shadow"]) .slds-radio [type='radio'][disabled] {
  cursor: not-allowed;
  user-select: none;
}

:host([data-render-mode="shadow"]) .slds-radio [type='radio'][disabled] ~ .slds-radio_faux,:host([data-render-mode="shadow"]) 
.slds-radio [type='radio'][disabled] + .slds-radio__label .slds-radio_faux {
  background-color: var(--slds-g-color-surface-container-2);
  border-color: var(--slds-g-color-border-1);
}

:host([data-render-mode="shadow"]) .slds-radio [type='radio'][disabled] ~ .slds-radio_faux::after,:host([data-render-mode="shadow"]) 
.slds-radio [type='radio'][disabled] + .slds-radio__label .slds-radio_faux::after {
  background: var(--slds-g-color-neutral-base-60);
}

:host([data-render-mode="shadow"].slds-has-error) .slds-radio [type='radio'] + .slds-radio_faux,:host([data-render-mode="shadow"].slds-has-error) .slds-radio [type='radio'] ~ .slds-radio_faux,:host([data-render-mode="shadow"].slds-has-error) .slds-radio [type='radio'] + .slds-radio__label .slds-radio_faux {
  border-color: var(--slds-g-color-error-base-40);
  border-width: var(--slds-g-sizing-border-2);
}

:host([data-render-mode="shadow"].slds-has-error) .slds-radio [type='radio']:checked + .slds-radio_faux,:host([data-render-mode="shadow"].slds-has-error) .slds-radio [type='radio']:checked ~ .slds-radio_faux,:host([data-render-mode="shadow"].slds-has-error) .slds-radio [type='radio']:checked + .slds-radio__label .slds-radio_faux {
  /* stylelint-disable */
  --slds-c-radio-color-background: var(
    --slds-c-radio-color-background-checked,
    var(--slds-g-color-surface-container-1)
  );
  /* stylelint-enable */
  background: none;
}

:host([data-render-mode="shadow"].slds-has-error) .slds-radio [type='radio']:checked + .slds-radio_faux::after,:host([data-render-mode="shadow"].slds-has-error) .slds-radio [type='radio']:checked ~ .slds-radio_faux::after,:host([data-render-mode="shadow"].slds-has-error) .slds-radio [type='radio']:checked + .slds-radio__label .slds-radio_faux::after {
  background: var(--slds-g-color-error-base-40);
}

:host([data-render-mode="shadow"]) .slds-form-element .slds-radio [type='radio'] + .slds-radio_faux,:host([data-render-mode="shadow"]) 
.slds-form-element .slds-radio [type='radio'] ~ .slds-radio_faux,:host([data-render-mode="shadow"]) 
.slds-radio [type='radio'] + .slds-radio__label .slds-radio_faux {
  margin-inline-end: var(--slds-g-spacing-2);
}

:host([data-render-mode="shadow"]) [dir='rtl'] .slds-form-element .slds-radio [type='radio'] + .slds-radio_faux,:host([data-render-mode="shadow"]) 
[dir='rtl'] [dir='rtl'] .slds-form-element .slds-radio [type='radio'] ~ .slds-radio_faux,:host([data-render-mode="shadow"]) 
[dir='rtl'] [dir='rtl'] .slds-radio [type='radio'] + .slds-radio__label .slds-radio_faux,:host([data-render-mode="shadow"]) 
[dir='rtl'] .slds-radio [type='radio'] + .slds-radio__label .slds-radio--faux {
  /*! @noflip */
  margin-inline-end: 0;
  margin-inline-start: var(--slds-g-spacing-2);
}

/* ------------------------------------------- */

/* Input Radio Button Group (type="button") */

/**
  * TODO: Temporary implementation of SLDS Radio Button Group
  * https://www.lightningdesignsystem.com/components/radio-button-group
  * Due to time constrains "Button" and "Radio Button Group" styles are hard coded
  */

/* ------------------------------------------- */

/**
  * TODO: .slds-button styles below need to be revisited.
  * Importing sds-button results in a bunch of conflicts
  */

:host([data-render-mode="shadow"]) .slds-button {
  position: relative;
  align-items: center;
  padding-block-start: 0;
  padding-block-end: 0;
  padding-inline-start: 0;
  padding-inline-end: 0;
  background: 0 0;
  background-color: transparent;
  background-clip: padding-box;
  color: var(--slds-g-color-accent-2);
  display: flex;
  line-height: 1.875rem;
  text-decoration: none;
  white-space: normal;
  user-select: none;
}

:host([data-render-mode="shadow"]) .slds-button:focus,:host([data-render-mode="shadow"]) 
.slds-button:hover {
  color: var(--slds-g-color-accent-4);
}

:host([data-render-mode="shadow"]) .slds-button:focus {
  box-shadow: 0 0 3px var(--slds-g-color-accent-2);
  outline: 0;
  padding: 30px;
}

:host([data-render-mode="shadow"]) .slds-button:active {
  color: var(--slds-g-color-accent-4);
}

/**
  * TODO: Styles below for the input radio button group need to be revisited.
  * Radio Button Group should be its own component.
  */

:host([data-render-mode="shadow"]) .slds-radio_button-group {
  display: inline-flex;
  border: 1px solid #dddbda;
  border-radius: var(--slds-g-radius-border-2);
}

:host([data-render-mode="shadow"]) .slds-radio_button {
  display: flex;
  border: 0;
  border-radius: 0;
  background-clip: padding-box;
}

/* Create styled button when adjacent to the input[radio] element */

:host([data-render-mode="shadow"]) .slds-radio_button .slds-radio_faux {
  padding-inline-start: var(--slds-g-spacing-4);
  padding-inline-end: var(--slds-g-spacing-4);
  text-align: center;
  vertical-align: middle;
}

/* Apply left borders to anything radio button after the first button */

:host([data-render-mode="shadow"]) .slds-radio_button + .slds-radio_button {
  border-inline-start: var(--slds-g-sizing-border-1) solid var(--slds-g-color-border-1);
  margin: 0;
}

/* Dealing with box shadows on specific n children of the button group */

:host([data-render-mode="shadow"]) .slds-radio_button:first-child > .slds-radio_button__label,:host([data-render-mode="shadow"]) 
.slds-radio_button:first-child > .slds-radio_faux {
  border-start-start-radius: var(--slds-g-radius-border-2);
  border-end-start-radius: var(--slds-g-radius-border-2);
}

:host([data-render-mode="shadow"]) .slds-button_last > .slds-radio_faux,:host([data-render-mode="shadow"]) 
.slds-radio_button:last-child > .slds-radio_faux,:host([data-render-mode="shadow"]) 
.slds-radio_button:last-child > .slds-radio_button__label {
  border-start-end-radius: var(--slds-g-radius-border-2);
  border-end-end-radius: var(--slds-g-radius-border-2);
}

/* Checked State with Interactions */

:host([data-render-mode="shadow"]) .slds-radio_button [part='radio']:checked + .slds-radio_faux,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio']:checked ~ .slds-radio_faux,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio']:checked + .slds-radio_button__label {
  background-color: var(--slds-g-color-accent-container-2);
  color: var(--slds-g-color-on-accent-1);
}

/* Need something stronger when the input is checked */

:host([data-render-mode="shadow"]) .slds-radio_button [part='radio']:checked + .slds-radio_faux:hover,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio']:checked + .slds-radio_faux:focus,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio']:checked ~ .slds-radio_faux:hover,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio']:checked ~ .slds-radio_faux:focus,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio']:checked + .slds-radio_button__label:hover,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio']:checked + .slds-radio_button__label:focus {
  background-color: var(--slds-g-color-accent-container-3);
}

/* Focus State */

:host([data-render-mode="shadow"]) .slds-radio_button [part='radio']:focus + .slds-radio_faux,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio']:focus ~ .slds-radio_faux,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio']:focus + .slds-radio_button__label {
  outline: 0;
  box-shadow: 0 0 3px var(--slds-g-color-accent-2);
  z-index: 1;
}

/* Disabled State */

:host([data-render-mode="shadow"]) .slds-radio_button [part='radio'][disabled] + .slds-radio_faux,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio'][disabled] ~ .slds-radio_faux,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio'][disabled] + .slds-radio_button__label {
  background-color: var(--slds-g-color-surface-container-1);
  color: var(--slds-g-color-disabled-1);
}

:host([data-render-mode="shadow"]) .slds-radio_button [part='radio'][disabled] + .slds-radio_faux:hover,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio'][disabled] + .slds-radio_faux:focus,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio'][disabled] ~ .slds-radio_faux:hover,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio'][disabled] ~ .slds-radio_faux:focus,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio'][disabled] + .slds-radio_button__label:hover,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio'][disabled] + .slds-radio_button__label:focus {
  cursor: default;
}

:host([data-render-mode="shadow"]) .slds-radio_button [part='radio'][disabled][checked] + .slds-radio_faux,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio'][disabled][checked] ~ .slds-radio_faux,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio'][disabled][checked] + .slds-radio_button__label {
  background-color: #c9c7c5;
  color: var(--slds-g-color-disabled-1);
}

:host([data-render-mode="shadow"]) .slds-radio_button [part='radio'][disabled][checked] + .slds-radio_faux:hover,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio'][disabled][checked] + .slds-radio_faux:focus,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio'][disabled][checked] ~ .slds-radio_faux:hover,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio'][disabled][checked] ~ .slds-radio_faux:focus,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio'][disabled][checked] + .slds-radio_button__label:hover,:host([data-render-mode="shadow"]) 
.slds-radio_button [part='radio'][disabled][checked] + .slds-radio_button__label:focus {
  cursor: default;
}

/* Label element inside of a radio button */

:host([data-render-mode="shadow"]) .slds-radio_button__label {
  background-color: var(--slds-g-color-surface-container-1);
}

:host([data-render-mode="shadow"]) .slds-radio_button__label:hover,:host([data-render-mode="shadow"]) 
.slds-radio_button__label:focus {
  cursor: pointer;
}
